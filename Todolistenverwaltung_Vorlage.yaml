openapi: 3.0.1
info:
  title: Todo-Listen-Verwaltung
  description: ""
  contact:
    email: wichmann@bbs-os-brinkstr.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
servers:
- url: http://127.0.0.1:5000/
tags:
- name: Listenverwaltung
paths:
  /list/{list_id}:
    get:
      tags:
      - Listenverwaltung
      summary: Get all items from list
      operationId: getList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      responses:
        200:
          description: List item returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoEntry'
        404:
          description: Invalid list id
          content: {}
    delete:
      tags:
      - Listenverwaltung
      summary: Delete a list
      operationId: deleteList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      responses:
        200:
          description: List was deleted
          content: {}
        404:
          description: Invalid list id
          content: {}
  /list:
    post:
      tags:
      - Listenverwaltung
      summary: Add new Task to the list
      operationId: addtask
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        200:
          description: List added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        500:
          description: List could not be added
          content: {}
      x-codegen-request-body-name: body
  /list/{list_id}/item:
    post:
      tags:
      - Listenverwaltung
      summary: Add new list
      operationId: addList
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        201:
          description: Task added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        500:
          description: Task could not be added
          content: {}
        404:
          description: Invalid Task id
          content: {}
        400:
          description: Invalid Task
          content: {}
      x-codegen-request-body-name: body
  /list/{list_id}/item/{item_id}:
    patch:
      tags:
      - Listenverwaltung
      summary: Add new Task to the list
      operationId: addtask
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        200:
          description: List added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        500:
          description: List could not be added
          content: {}
      x-codegen-request-body-name: body
  /list/{list_id}/item:
    post:
      tags:
      - Listenverwaltung
      summary: update a Task
      operationId: updateTask
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        200:
          description: Task Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        500:
          description: Task could not be updated
          content: {}
        404:
          description: Invalid Task id
          content: {}
      x-codegen-request-body-name: body
  /list/{list_id}/item/{item_id}:
    delete:
      tags:
      - Listenverwaltung
      summary: Delete a list
      operationId: deleteList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Task was deleted
          content: {}
        404:
          description: Invalid list id
          content: {}
        500:
          description: Task could not be deleted
          content: {}
       x-codegen-request-body-name: body
  /lists:
    get:
      tags:
      - Listenverwaltung
      summary: Get all lists
      operationId: getallLists
      responses:
        200:
          description: Lists returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoEntry'
         500:
          description: Task could not be deleted
          content: {}
       x-codegen-request-body-name: body
  /list/{list_id}:
    patch:
      tags:
      - Listenverwaltung
      summary: Add new Task to the list
      operationId: addtask
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        200:
          description: List added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        500:
          description: List could not be added
          content: {}
      x-codegen-request-body-name: body

components:
  schemas:
    TodoList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    TodoEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        user_id:
          type: string
          format: uuid
        list_id:
          type: string
          format: uuid
