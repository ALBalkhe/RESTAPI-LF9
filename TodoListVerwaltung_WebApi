from flask import Flask, render_template, request, redirect, url_for
import sqlite3

app = Flask(__name__)

# Datenbankverbindung
DB_FILENAME = 'todolist.db'
connection = sqlite3.connect(
    DB_FILENAME, check_same_thread=False, detect_types=sqlite3.PARSE_DECLTYPES)
   
cursor = connection.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS veranstaltungen (id INTEGER PRIMARY KEY AUTOINCREMENT,
                  name TEXT, place TEXT, date DATE)""")
cursor.execute("""INSERT INTO veranstaltungen VALUES (NULL, 'Konzert', 'Bühne 1', '2018-01-05')""")
cursor.execute("""INSERT INTO veranstaltungen VALUES (NULL, 'Weinprobe', 'Wein Müller GmbH', '2018-08-12')""")
cursor.execute("""INSERT INTO veranstaltungen VALUES (NULL, 'Infoveranstaltung', 'Stadthaus', '2018-07-22')""")
connection.commit()
   
   
# Startseite: Liste aller Aufgaben anzeigen
@app.route('/list')
def list():
    title = 'Liste aller todos'
    heading = 'Liste aller todos'
    content = ''
    event_template = '<p>{name} am Ort {place} am {date}</p>'
    # hole alle todos aus der Datenbank
    cursor = connection.cursor()
    cursor.execute('SELECT name, place, date FROM todos')
    for row in cursor.fetchall():
        # erzeuge HTML-Elemente für jede todo aus der Datenbank
        name, place, date = row
        content += event_template.format(name=name, place=place, date=date)
    return html_template.format(title=title, heading=heading, content=content)

# Neue Aufgabe hinzufügen
@app.route('/add', methods=['GET', 'POST'])
def add():
    if request.method == 'POST':
        name = request.form['name']
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute('INSERT INTO tasks (name) VALUES (?)', (name,))
        conn.commit()
        conn.close()
        return redirect(url_for('index'))
    return render_template('add.html')

# Aufgabe bearbeiten
@app.route('/edit/<int:id>', methods=['GET', 'POST'])
def edit(id):
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM tasks WHERE id = ?', (id,))
    task = cursor.fetchone()
    if request.method == 'POST':
        name = request.form['name']
        cursor.execute('UPDATE tasks SET name = ? WHERE id = ?', (name, id))
        conn.commit()
        conn.close()
        return redirect(url_for('index'))
    conn.close()
    return render_template('edit.html', task=task)

# Aufgabe löschen
@app.route('/delete/<int:id>', methods=['GET'])
def delete(id):
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute('DELETE FROM tasks WHERE id = ?', (id,))
    conn.commit()
    conn.close()
    return redirect(url_for('index'))

if __name__ == '__main__':
    init_db()
    app.run(debug=True)
